name: Release job
on: 
  workflow_dispatch:

jobs:
  check-tag:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['service-index', 'service-ui', 'service-api', 'service-authorization', 'service-jobs', 'service-auto-analyzer', 'service-metrics-gatherer', 'migrations']
    steps:
    - uses: oprypin/find-latest-tag@v1
      with:
        repository: reportportal/${{ matrix.repo }}
        releases-only: true
      id: tagstep

    - name: Save service version to env file
      shell: bash
      run: |
        TAG_NAME=$(echo "${{ matrix.repo }}" | tr [:lower:]- [:upper:]_)
        echo "${TAG_NAME}_TAG=${{ steps.tagstep.outputs.tag }}" >> ./${{ matrix.repo }}.env

    - name: Upload .env file
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.repo }}-env
        path: ./${{ matrix.repo }}.env
          
  ec2-start:
    name: Start EC2 instance
    runs-on: ubuntu-latest
    needs: check-tag
    steps:
      - name: Start AWS EC2
        run: |
          aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  docker-compose:
    name: Docker run
    runs-on: rp-release
    needs: ec2-start
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ahmedazhazh/reportportal
      
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Merge env files
        run: cat **/*.env >> .env

      - name: Display .env content
        run: cat .env && ls -la

      - name: Run Docker compose up
        run: docker compose -f docker-compose-release.yml -p reportportal up -d

  run-tests:
    name: Run UI tests
    runs-on: rp-release
    needs: docker-compose
    steps:
      - name: Checkout code
        run: |
          git clone https://ahmed_azhazh:${{secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}@git.epam.com/EPM-RPP/demo-ui-test.git
      - name: npm install
        run: cd demo-ui-test && npm i
      - name: Create .env file
        run: cp /home/ubuntu/.env demo-ui-test
      - name: npm test 
        run: cd demo-ui-test && npm test 
        
     # - name: Run Docker compose down
     #   run: docker compose -p reportportal down

 # ec2-stop:
 #   runs-on: ubuntu-latest
 #   name: Stop EC2 instance
 #   needs: docker-compose
 #   steps:
 #     - name: Stop AWS EC2
 #       run: |
 #         aws ec2 stop-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
 #       env:
 #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 #         AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
