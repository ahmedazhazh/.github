name: Release job
on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: false

jobs:
  check-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: tdemin/find-latest-tag@v1
        name: tag_find
        with:
          repo: https://github.com/reportportal/service-authorization
      - name: Show output
        run: echo "${{ steps.tag_find.outputs.tag }}"
 # build-docker:
 #   name: Trigger Docker image build
 #   runs-on: ubuntu-latest
 #   strategy:
 #     matrix:
 #       repo: ['service-ui']
 #   steps:
 #     - uses: convictional/trigger-workflow-and-wait@v1.6.1
 #       with:
 #         owner: ahmedazhazh
 #         repo: ${{ matrix.repo }}
 #         github_token: ${{ secrets.PAT }}
 #         workflow_file_name: run-ec2.yml
 #         ref: develop
 #         wait_interval: 60
 #         client_payload: '{"version":"${{ github.event.inputs.version }}"}'
 #         propagate_failure: true
 #         trigger_workflow: true
 #         wait_workflow: true
          
  ec2-start:
    name: Start EC2 instance
    runs-on: ubuntu-latest
    #needs: build-docker
    steps:
      - name: Start AWS EC2
        run: |
          #aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  docker-compose:
    name: Docker run
    runs-on: rp-release
    needs: ec2-start
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ahmedazhazh/reportportal

      - name: Run Docker compose up
        run: VERSION=${{ github.event.inputs.version }} docker compose -f docker-compose-release.yml -p reportportal up -d

  run-tests:
    name: Run UI tests
    runs-on: rp-release
    needs: docker-compose
    steps:
      - name: Checkout code
        run: |
          git clone https://ahmed_azhazh:${{secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}@git.epam.com/EPM-RPP/demo-ui-test.git
      - name: npm install
        run: cd demo-ui-test && npm i
      - name: Create .env file
        run: cp /home/ubuntu/.env demo-ui-test
      - name: npm test 
        run: cd demo-ui-test && npm test 
        
     # - name: Run Docker compose down
     #   run: docker compose -p reportportal down

 # ec2-stop:
 #   runs-on: ubuntu-latest
 #   name: Stop EC2 instance
 #   needs: docker-compose
 #   steps:
 #     - name: Stop AWS EC2
 #       run: |
 #         aws ec2 stop-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
 #       env:
 #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 #         AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
